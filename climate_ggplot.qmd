
### Scatter Plots with GGplot

```{python}
%run ~/Documents/GitHub/landmapy/landmapy/process.py
```

```{python}
#| eval: False
pip install --quiet git+https://github.com/byandell-envsys/landmapy.git
```

```{python}
#| eval: false
pip install --quiet plotnine
```

```{python}
import pandas as pd
import xarray as xr
import matplotlib.pyplot as plt

from plotnine import ggplot, aes
from plotnine import geom_point, geom_abline, geom_smooth
from plotnine import scale_x_log10, scale_y_log10
```

```{python}
%store -r buffalo_gdf buffalo_da slope_da maca_da
```

```{python}
print(slope_da.shape)
print(buffalo_da.shape)
print(maca_da[0].shape)
```

While images should be reprojected to a higher resolution,
associations among measurements should probably
be assessed on the lower resolution.

```{python}
maca_das = xr.concat(
    [maca_da[1][list(range(30))].mean(dim='time'),
    maca_da[0][list(range(30))].mean(dim='time'),
    maca_da[1][list(range(30,60))].mean(dim='time'),
    maca_da[0][list(range(30,60))].mean(dim='time')],
    dim = 'era_rcp')
era_rcp = ['now45','now85','fut45','fut85']
maca_das = maca_das.assign_coords(era_rcp=era_rcp)
```

```{python}
sand_low_da = buffalo_da.rio.reproject_match(maca_das[0]).rio.clip(buffalo_gdf.geometry)
slope_low_da = slope_da.rio.reproject_match(maca_das[0]).rio.clip(buffalo_gdf.geometry)
```

```{python}
maca_low_da = {}
for i in list(range(maca_das.shape[0])):
    maca_low_da[era_rcp[i]] = maca_das[i].rio.clip(buffalo_gdf.geometry)
```

```{python}
print(sand_low_da.shape)
print(slope_low_da.shape)
for i in list(range(maca_das.shape[0])):
    print(maca_low_da[era_rcp[i]].shape)
```

Create DataFrame with all measurements.

```{python}
maca_df = merge_da_df(maca_low_da)
```

```{python}
hab_df = merge_da_df({'sand': sand_low_da, 'slope': slope_low_da})
hab_df = hab_df.rename(columns={'y': 'lat', 'x': 'lon'})
hab_df = pd.merge(maca_df, hab_df, on=['lat','lon'])
```

```{python}
hab_df
```

```{python}
def ggplot_xy(df, x, y):
    return (
        ggplot(df)
            + aes(x, y)
            + geom_point()
            + geom_smooth(se=False, color="blue")
    )
```

```{python}
p = (
    ggplot_xy(hab_df, 'now45', 'now85')
       + geom_abline(slope=1, intercept=0, color="blue")
)
p
```

```{python}
ggplot_xy(hab_df, 'now45', 'now85')
```

```{python}
(
    ggplot_xy(hab_df, 'now45', 'fut45')
        + geom_abline(slope=1, intercept=0, color="red")
)
```

```{python}
(
    ggplot_xy(hab_df, 'sand', 'slope') +
        scale_x_log10() +
        scale_y_log10()
)
```

```{python}
(
    ggplot_xy(hab_df, 'now45', 'slope') +
        scale_y_log10()
)
```

```{python}
p_sand = [ggplot_xy(hab_df, y, 'sand') for y in era_rcp]
for p in p_sand:
    print(p)
```
